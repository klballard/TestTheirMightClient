[{"C:\\Users\\dagna\\Desktop\\wd64-Sept2020\\Red-Badge\\projects\\TestTheirMight\\client\\src\\index.js":"1","C:\\Users\\dagna\\Desktop\\wd64-Sept2020\\Red-Badge\\projects\\TestTheirMight\\client\\src\\App.js":"2","C:\\Users\\dagna\\Desktop\\wd64-Sept2020\\Red-Badge\\projects\\TestTheirMight\\client\\src\\components\\Homepage.js":"3","C:\\Users\\dagna\\Desktop\\wd64-Sept2020\\Red-Badge\\projects\\TestTheirMight\\client\\src\\components\\MightNavbar.js":"4","C:\\Users\\dagna\\Desktop\\wd64-Sept2020\\Red-Badge\\projects\\TestTheirMight\\client\\src\\auth\\Login.js":"5","C:\\Users\\dagna\\Desktop\\wd64-Sept2020\\Red-Badge\\projects\\TestTheirMight\\client\\src\\auth\\Auth.js":"6","C:\\Users\\dagna\\Desktop\\wd64-Sept2020\\Red-Badge\\projects\\TestTheirMight\\client\\src\\auth\\Register.js":"7","C:\\Users\\dagna\\Desktop\\wd64-Sept2020\\Red-Badge\\projects\\TestTheirMight\\client\\src\\components\\SavedFighterList.jsx":"8","C:\\Users\\dagna\\Desktop\\wd64-Sept2020\\Red-Badge\\projects\\TestTheirMight\\client\\src\\components\\SingleFight.jsx":"9","C:\\Users\\dagna\\Desktop\\wd64-Sept2020\\Red-Badge\\projects\\TestTheirMight\\client\\src\\components\\FighterSearch.jsx":"10","C:\\Users\\dagna\\Desktop\\wd64-Sept2020\\Red-Badge\\projects\\TestTheirMight\\client\\src\\components\\CreateTeam.jsx":"11","C:\\Users\\dagna\\Desktop\\wd64-Sept2020\\Red-Badge\\projects\\TestTheirMight\\client\\src\\components\\FighterCard.jsx":"12","C:\\Users\\dagna\\Desktop\\wd64-Sept2020\\Red-Badge\\projects\\TestTheirMight\\client\\src\\components\\SavedFighters.jsx":"13","C:\\Users\\dagna\\desktop\\wd64-Sept2020\\Red-Badge\\projects\\TestTheirMight\\client\\src\\index.js":"14","C:\\Users\\dagna\\desktop\\wd64-Sept2020\\Red-Badge\\projects\\TestTheirMight\\client\\src\\components\\MightNavbar.js":"15","C:\\Users\\dagna\\desktop\\wd64-Sept2020\\Red-Badge\\projects\\TestTheirMight\\client\\src\\components\\SavedFighterList.jsx":"16","C:\\Users\\dagna\\Desktop\\wd64-Sept2020\\Red-Badge\\projects\\TestTheirMight\\client\\src\\components\\SavedTeamList.jsx":"17","C:\\Users\\dagna\\Desktop\\wd64-Sept2020\\Red-Badge\\projects\\TestTheirMight\\client\\src\\components\\SavedTeams.jsx":"18","C:\\Users\\dagna\\Desktop\\wd64-Sept2020\\Red-Badge\\projects\\TestTheirMight\\client\\src\\components\\EditTeam.jsx":"19","C:\\Users\\dagna\\Desktop\\wd64-Sept2020\\Red-Badge\\projects\\TestTheirMight\\client\\src\\components\\TeamFight.jsx":"20","C:\\Users\\dagna\\Desktop\\wd64-Sept2020\\Red-Badge\\projects\\TestTheirMight\\client\\src\\components\\AdminPage.jsx":"21"},{"size":500,"mtime":499162500000,"results":"22","hashOfConfig":"23"},{"size":771,"mtime":1606832698670,"results":"24","hashOfConfig":"23"},{"size":579,"mtime":1606146010574,"results":"25","hashOfConfig":"23"},{"size":4983,"mtime":1606924866950,"results":"26","hashOfConfig":"23"},{"size":2447,"mtime":1606788097545,"results":"27","hashOfConfig":"23"},{"size":570,"mtime":1606150229779,"results":"28","hashOfConfig":"23"},{"size":2421,"mtime":1606788056863,"results":"29","hashOfConfig":"23"},{"size":2574,"mtime":1606588628058,"results":"30","hashOfConfig":"23"},{"size":6800,"mtime":1606770189580,"results":"31","hashOfConfig":"23"},{"size":3604,"mtime":1606877755570,"results":"32","hashOfConfig":"23"},{"size":13034,"mtime":1606770514734,"results":"33","hashOfConfig":"23"},{"size":3106,"mtime":1606770410799,"results":"34","hashOfConfig":"23"},{"size":1715,"mtime":1606858092569,"results":"35","hashOfConfig":"23"},{"size":500,"mtime":499162500000,"results":"36","hashOfConfig":"37"},{"size":4525,"mtime":1606593038741,"results":"38","hashOfConfig":"37"},{"size":2574,"mtime":1606588628058,"results":"39","hashOfConfig":"37"},{"size":2305,"mtime":1606755974292,"results":"40","hashOfConfig":"23"},{"size":1611,"mtime":1606755609206,"results":"41","hashOfConfig":"23"},{"size":1910,"mtime":1606770431262,"results":"42","hashOfConfig":"23"},{"size":6067,"mtime":1606917990394,"results":"43","hashOfConfig":"23"},{"size":1067,"mtime":1606840035226,"results":"44","hashOfConfig":"23"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},"17jdaag",{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"18oxn9e",{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\dagna\\Desktop\\wd64-Sept2020\\Red-Badge\\projects\\TestTheirMight\\client\\src\\index.js",[],["93","94"],"C:\\Users\\dagna\\Desktop\\wd64-Sept2020\\Red-Badge\\projects\\TestTheirMight\\client\\src\\App.js",["95","96"],"C:\\Users\\dagna\\Desktop\\wd64-Sept2020\\Red-Badge\\projects\\TestTheirMight\\client\\src\\components\\Homepage.js",["97"],"import React from 'react';\r\nimport {makeStyles} from '@material-ui/core';\r\n\r\n\r\nfunction Homepage(){\r\n //   const classes = useStyles();\r\n    return(\r\n        <div>\r\n            <h2>Test Their Might!</h2>\r\n            <br/>\r\n            <h3>Tired of the drawn out game-night discussions over Batman being able to best the Predator? Superman vs Dr. Manhattan? Powered by the Superhero API, TEST THEIR MIGHT allows you to pit your favorite characters against each other in a 1v1 or team-based simulated fight!</h3>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Homepage;","C:\\Users\\dagna\\Desktop\\wd64-Sept2020\\Red-Badge\\projects\\TestTheirMight\\client\\src\\components\\MightNavbar.js",["98"],"C:\\Users\\dagna\\Desktop\\wd64-Sept2020\\Red-Badge\\projects\\TestTheirMight\\client\\src\\auth\\Login.js",["99","100","101","102","103"],"import React, {useState} from 'react';\r\nimport {Modal, ModalHeader, ModalBody, Button, Input, Label, Form, FormGroup} from 'reactstrap';\r\nimport {makeStyles} from '@material-ui/core';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport APIURL from '../helpers/environment';\r\n\r\n\r\nconst LoginPlayer = (props) => {\r\n    const {buttonLabel, className} = props;\r\n   // const classes = useStyles();\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [sessionToken, setSessionToken] = useState('');\r\n    const [loginModal, setLoginModal] = useState(false);\r\n    const toggle = () => setLoginModal(!loginModal);\r\n\r\n    let handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        fetch(`${APIURL}/user/login`, {\r\n            method:'POST',\r\n            body: JSON.stringify({user:{email:email, password:password}}),\r\n            headers: new Headers({\r\n                'Content-Type': 'application/json'\r\n            })\r\n        }).then(\r\n            (response) => response.json()\r\n        ).then((data) => {\r\n            props.updateToken(data.sessionToken)\r\n        }).then(alert('Welcome back.'))\r\n    };\r\n\r\n    return(\r\n        <div>\r\n            {localStorage.getItem('token') === null ? <Button onClick={toggle}>Login</Button>: null}\r\n            <Modal isOpen={loginModal} toggle={toggle}>\r\n                <ModalHeader toggle={toggle}>Welcome back!</ModalHeader>\r\n                <ModalBody>\r\n                    <Form onSubmit={handleSubmit}>\r\n                        <FormGroup>\r\n                            <Label htmlFor=\"email\">Email: </Label>\r\n                            <Input onChange={(e) => setEmail(e.target.value)} type=\"email\" name=\"email\" value={email}/>\r\n                    \r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Label htmlFor=\"password\">Password: </Label>\r\n                            <Input onChange={(e) => setPassword(e.target.value)} type=\"password\" name=\"password\" value={password}/>\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Button type='submit' onClick={toggle}>Login</Button>{' '}\r\n                            <Button onClick={toggle}>Cancel</Button>\r\n                        </FormGroup>\r\n                    </Form>\r\n                </ModalBody>\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginPlayer;","C:\\Users\\dagna\\Desktop\\wd64-Sept2020\\Red-Badge\\projects\\TestTheirMight\\client\\src\\auth\\Auth.js",[],"C:\\Users\\dagna\\Desktop\\wd64-Sept2020\\Red-Badge\\projects\\TestTheirMight\\client\\src\\auth\\Register.js",["104","105","106"],"C:\\Users\\dagna\\Desktop\\wd64-Sept2020\\Red-Badge\\projects\\TestTheirMight\\client\\src\\components\\SavedFighterList.jsx",[],["107","108"],"C:\\Users\\dagna\\Desktop\\wd64-Sept2020\\Red-Badge\\projects\\TestTheirMight\\client\\src\\components\\SingleFight.jsx",[],"C:\\Users\\dagna\\Desktop\\wd64-Sept2020\\Red-Badge\\projects\\TestTheirMight\\client\\src\\components\\FighterSearch.jsx",["109"],"C:\\Users\\dagna\\Desktop\\wd64-Sept2020\\Red-Badge\\projects\\TestTheirMight\\client\\src\\components\\CreateTeam.jsx",[],"C:\\Users\\dagna\\Desktop\\wd64-Sept2020\\Red-Badge\\projects\\TestTheirMight\\client\\src\\components\\FighterCard.jsx",["110","111","112","113","114","115"],"import React, {useState} from 'react';\r\nimport {Button, Card, CardBody, CardImg, CardGroup, CardSubtitle, CardText, CardTitle, Col, Modal, ModalBody, ModalHeader} from 'reactstrap';\r\nimport {List, ListItem} from '@material-ui/core';\r\nimport APIURL from '../helpers/environment';\r\n\r\n\r\n\r\nconst FighterCard = (props) => {\r\n    console.log(props.results);\r\n    console.log(props.results.name);\r\n    console.log(props.results.powerstats);\r\n    console.log(props.results.powerstats.intelligence);\r\n    console.log(props.image);\r\n    \r\n\r\n    //const [results, setResults] = useState(props.results);\r\n    const saveFighter = () => {\r\n        //let result = Array.from(props.results);\r\n        //props.results.map(() => {\r\n            //e.preventDefault();\r\n            fetch(`${APIURL}/fighter/save`, {\r\n\r\n                method:'POST',\r\n                body: JSON.stringify({fighterName: props.results.name, intelligence: props.results.powerstats.intelligence, strength: props.results.powerstats.strength, speed: props.results.powerstats.speed, durability: props.results.powerstats.durability, power: props.results.powerstats.power, combat: props.results.powerstats.combat, image: props.results.image.url}),\r\n                headers: new Headers({\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': localStorage.token,\r\n                })\r\n            }).then((res) => res.json())\r\n            .then((fighter) => {\r\n                console.log(fighter);\r\n            })\r\n            \r\n            \r\n            \r\n        /*}*///)\r\n    }\r\n    return(\r\n        <div>\r\n            <Col className='col-12'>\r\n                <CardGroup className='card-group m-3'>\r\n                    <Card className='card overflow-auto' style={{maxWidth: \"250px\", maxHeight:\"1000px\", minHeight:\"425px\"}}>\r\n                        <CardTitle>\r\n                            <b>{props.results.name}</b>\r\n                        </CardTitle>\r\n                        <CardImg top width=\"100%\" src={props.results.image.url} alt=\"Fighter pic\"/>\r\n                        <CardBody>\r\n                            <b>Stats:</b>\r\n                            <List>\r\n                                <ListItem>Intelligence: {props.results.powerstats.intelligence}</ListItem>\r\n                                <ListItem>Strength: {props.results.powerstats.strength}</ListItem>\r\n                                <ListItem>Speed: {props.results.powerstats.speed}</ListItem>\r\n                                <ListItem>Durability: {props.results.powerstats.durability}</ListItem>\r\n                                <ListItem>Power: {props.results.powerstats.power}</ListItem>\r\n                                <ListItem>Combat: {props.results.powerstats.combat}</ListItem>\r\n                            </List>\r\n                            <Button className='mt-2' onClick={saveFighter}>Add Fighter to Roster</Button>\r\n                        </CardBody>\r\n                    </Card>\r\n                </CardGroup>\r\n            </Col>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default FighterCard;\r\n\r\n\r\n                ","C:\\Users\\dagna\\Desktop\\wd64-Sept2020\\Red-Badge\\projects\\TestTheirMight\\client\\src\\components\\SavedFighters.jsx",[],"C:\\Users\\dagna\\desktop\\wd64-Sept2020\\Red-Badge\\projects\\TestTheirMight\\client\\src\\index.js",[],"C:\\Users\\dagna\\desktop\\wd64-Sept2020\\Red-Badge\\projects\\TestTheirMight\\client\\src\\components\\MightNavbar.js",["116"],"C:\\Users\\dagna\\desktop\\wd64-Sept2020\\Red-Badge\\projects\\TestTheirMight\\client\\src\\components\\SavedFighterList.jsx",[],"C:\\Users\\dagna\\Desktop\\wd64-Sept2020\\Red-Badge\\projects\\TestTheirMight\\client\\src\\components\\SavedTeamList.jsx",[],"C:\\Users\\dagna\\Desktop\\wd64-Sept2020\\Red-Badge\\projects\\TestTheirMight\\client\\src\\components\\SavedTeams.jsx",[],"C:\\Users\\dagna\\Desktop\\wd64-Sept2020\\Red-Badge\\projects\\TestTheirMight\\client\\src\\components\\EditTeam.jsx",["117","118","119","120","121","122","123","124","125","126"],"import React, {useState} from 'react';\r\nimport {Button, Form, FormGroup, Input, Label, Modal, ModalBody, ModalHeader} from 'reactstrap';\r\nimport APIURL from '../helpers/environment';\r\n\r\n\r\nconst EditTeam = (props) => {\r\n    const [editName, setEditName] = useState(props.teamToEdit.teamName);\r\n    const [editFighterOne, setEditFighterOne] = useState(props.teamToEdit.fighterOne);\r\n    const [editFighterTwo, setEditFighterTwo] = useState(props.teamToEdit.fighterTwo);\r\n    const [editFighterThree, setEditFighterThree] = useState(props.teamToEdit.fighterThree);\r\n    const [editFighterFour, setEditFighterFour] = useState(props.teamToEdit.fighterFour);\r\n    const [editFighterFive, setEditFighterFive] = useState(props.teamToEdit.fighterFive);\r\n    \r\n    const teamNameUpdate = (event) => {\r\n        event.preventDefault();\r\n        fetch(`${APIURL}/team/${props.teamToEdit.id}`, {\r\n            method:'PUT',\r\n            body: JSON.stringify({userId: 4, teamName: editName}),\r\n            headers: new Headers({\r\n                'Content-Type':'application/json',\r\n                'Authorization': localStorage.token\r\n            })\r\n        }).then((res) => {\r\n            props.fetchTeams();\r\n            props.updateOff();\r\n        })\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <Modal isOpen={true}>\r\n                <ModalHeader>Edit Team</ModalHeader>\r\n                <ModalBody>\r\n                    <Form onSubmit={teamNameUpdate}>\r\n                        <FormGroup>\r\n                            <Label htmlFor='name'>Edit name</Label>\r\n                            <Input name='name' value={editName} onChange={(e) => setEditName(e.target.value)}/>\r\n                        </FormGroup>\r\n                        <Button type='submit'>Update</Button>\r\n                    </Form>\r\n                </ModalBody>\r\n            </Modal>\r\n        </div>\r\n    )\r\n\r\n\r\n}\r\n\r\n\r\n\r\nexport default EditTeam;","C:\\Users\\dagna\\Desktop\\wd64-Sept2020\\Red-Badge\\projects\\TestTheirMight\\client\\src\\components\\TeamFight.jsx",["127"],"C:\\Users\\dagna\\Desktop\\wd64-Sept2020\\Red-Badge\\projects\\TestTheirMight\\client\\src\\components\\AdminPage.jsx",[],{"ruleId":"128","replacedBy":"129"},{"ruleId":"130","replacedBy":"131"},{"ruleId":"132","severity":1,"message":"133","line":3,"column":16,"nodeType":"134","messageId":"135","endLine":3,"endColumn":24},{"ruleId":"132","severity":1,"message":"136","line":4,"column":9,"nodeType":"134","messageId":"135","endLine":4,"endColumn":19},{"ruleId":"132","severity":1,"message":"136","line":2,"column":9,"nodeType":"134","messageId":"135","endLine":2,"endColumn":19},{"ruleId":"132","severity":1,"message":"136","line":3,"column":9,"nodeType":"134","messageId":"135","endLine":3,"endColumn":19},{"ruleId":"132","severity":1,"message":"136","line":3,"column":9,"nodeType":"134","messageId":"135","endLine":3,"endColumn":19},{"ruleId":"132","severity":1,"message":"137","line":9,"column":12,"nodeType":"134","messageId":"135","endLine":9,"endColumn":23},{"ruleId":"132","severity":1,"message":"138","line":9,"column":25,"nodeType":"134","messageId":"135","endLine":9,"endColumn":34},{"ruleId":"132","severity":1,"message":"139","line":13,"column":12,"nodeType":"134","messageId":"135","endLine":13,"endColumn":24},{"ruleId":"132","severity":1,"message":"140","line":13,"column":26,"nodeType":"134","messageId":"135","endLine":13,"endColumn":41},{"ruleId":"132","severity":1,"message":"136","line":3,"column":9,"nodeType":"134","messageId":"135","endLine":3,"endColumn":19},{"ruleId":"132","severity":1,"message":"137","line":8,"column":12,"nodeType":"134","messageId":"135","endLine":8,"endColumn":23},{"ruleId":"132","severity":1,"message":"138","line":8,"column":25,"nodeType":"134","messageId":"135","endLine":8,"endColumn":34},{"ruleId":"128","replacedBy":"141"},{"ruleId":"130","replacedBy":"142"},{"ruleId":"132","severity":1,"message":"136","line":3,"column":9,"nodeType":"134","messageId":"135","endLine":3,"endColumn":19},{"ruleId":"132","severity":1,"message":"133","line":1,"column":16,"nodeType":"134","messageId":"135","endLine":1,"endColumn":24},{"ruleId":"132","severity":1,"message":"143","line":2,"column":53,"nodeType":"134","messageId":"135","endLine":2,"endColumn":65},{"ruleId":"132","severity":1,"message":"144","line":2,"column":67,"nodeType":"134","messageId":"135","endLine":2,"endColumn":75},{"ruleId":"132","severity":1,"message":"145","line":2,"column":93,"nodeType":"134","messageId":"135","endLine":2,"endColumn":98},{"ruleId":"132","severity":1,"message":"146","line":2,"column":100,"nodeType":"134","messageId":"135","endLine":2,"endColumn":109},{"ruleId":"132","severity":1,"message":"147","line":2,"column":111,"nodeType":"134","messageId":"135","endLine":2,"endColumn":122},{"ruleId":"132","severity":1,"message":"136","line":3,"column":9,"nodeType":"134","messageId":"135","endLine":3,"endColumn":19},{"ruleId":"132","severity":1,"message":"148","line":8,"column":12,"nodeType":"134","messageId":"135","endLine":8,"endColumn":26},{"ruleId":"132","severity":1,"message":"149","line":8,"column":28,"nodeType":"134","messageId":"135","endLine":8,"endColumn":45},{"ruleId":"132","severity":1,"message":"150","line":9,"column":12,"nodeType":"134","messageId":"135","endLine":9,"endColumn":26},{"ruleId":"132","severity":1,"message":"151","line":9,"column":28,"nodeType":"134","messageId":"135","endLine":9,"endColumn":45},{"ruleId":"132","severity":1,"message":"152","line":10,"column":12,"nodeType":"134","messageId":"135","endLine":10,"endColumn":28},{"ruleId":"132","severity":1,"message":"153","line":10,"column":30,"nodeType":"134","messageId":"135","endLine":10,"endColumn":49},{"ruleId":"132","severity":1,"message":"154","line":11,"column":12,"nodeType":"134","messageId":"135","endLine":11,"endColumn":27},{"ruleId":"132","severity":1,"message":"155","line":11,"column":29,"nodeType":"134","messageId":"135","endLine":11,"endColumn":47},{"ruleId":"132","severity":1,"message":"156","line":12,"column":12,"nodeType":"134","messageId":"135","endLine":12,"endColumn":27},{"ruleId":"132","severity":1,"message":"157","line":12,"column":29,"nodeType":"134","messageId":"135","endLine":12,"endColumn":47},{"ruleId":"132","severity":1,"message":"158","line":57,"column":14,"nodeType":"134","messageId":"135","endLine":57,"endColumn":17},"no-native-reassign",["159"],"no-negated-in-lhs",["160"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'makeStyles' is defined but never used.","'buttonLabel' is assigned a value but never used.","'className' is assigned a value but never used.","'sessionToken' is assigned a value but never used.","'setSessionToken' is assigned a value but never used.",["159"],["160"],"'CardSubtitle' is defined but never used.","'CardText' is defined but never used.","'Modal' is defined but never used.","'ModalBody' is defined but never used.","'ModalHeader' is defined but never used.","'editFighterOne' is assigned a value but never used.","'setEditFighterOne' is assigned a value but never used.","'editFighterTwo' is assigned a value but never used.","'setEditFighterTwo' is assigned a value but never used.","'editFighterThree' is assigned a value but never used.","'setEditFighterThree' is assigned a value but never used.","'editFighterFour' is assigned a value but never used.","'setEditFighterFour' is assigned a value but never used.","'editFighterFive' is assigned a value but never used.","'setEditFighterFive' is assigned a value but never used.","'sum' is defined but never used.","no-global-assign","no-unsafe-negation"]